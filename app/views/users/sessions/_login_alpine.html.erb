<!-- ログイン用のAlpine.jsスクリプト -->
<script>

  const emailPattern = /^[a-zA-Z0-9_+-]+(\.[a-zA-Z0-9_+-]+)*@([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\.)+[a-zA-Z]{2,}$/; //emailの正規表現パターン定義。
  document.addEventListener('alpine:init', () => {
    console.log("Alpineが読み込まれました");
    Alpine.data('formValidation', () => ({
      email: '', //メアド
      password: '', // パスワード
      errors: {}, //エラーメッセージ
      status_submit: false,

      // email関連のバリデーション
      validateEmailBlur() { //tabキーもしくはfocusが外れた際に未入力と形式チェック
        if (!this.email) {
          this.errors.email = "※emailは必須です" // emailのエラーを表示する。
        } else if (!emailPattern.test(this.email)) {
          this.errors.email = "※正しいメールアドレスを入力してください"
        }
      },

      validateEmailChange() { // enterキーが押された際に形式チェック
        if (!emailPattern.test(this.email)) {
          this.errors.email = "※正しいメールアドレスを入力してください"
        }
      },

      validateEmailInput() { // エラーが出た後はリアルタイムでエラーを外す。
        if (this.errors.email === "※emailは必須です" && this.email) {
          delete this.errors.email;
        } else if (this.errors.email === "※正しいメールアドレスを入力してください" && emailPattern.test(this.email)) {
          delete this.errors.email;
        }
      },

      // password関連のバリデーション
      validatePassword() { // passwordのバリデーション確認用。
        //console.log('validatePasswordBlurが実行されます');
        if (!this.password) { // 入力値が空の時
          this.errors.password = "※passwordは必須です。"
        } else {
          delete this.errors.password;
        }
      },

      validateSubmit() { //送信ボタン活性化のためのチェック確認。ちょっと処理重くなりそうやけど、入力内容ごとにすべてのエラー要因を検索して大丈夫な場合活性化させる感じ。
        if (this.password && this.email && emailPattern.test(this.email) ) {
          this.status_submit = true;
        } else {
          this.status_submit = false;
        }
      },

    }));

  });
</script>