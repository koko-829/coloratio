<!-- source:https://codepen.io/owaiswiz/pen/jOPvEPB -->
<% @colors = ['#303967', '#e60012', '#ffe200'] %>
<div id="tag-info" data-json=<%= @colors.to_json %>></div>
<div x-data="{ choice: false, setting: <%= @colors.size %> }" class= "min-h-fit py-10 bg-gray-100 text-gray-900 flex items-center justify-center"> <%# フォーム画面の土台枠外span %>
  <div class="mx-20 my-5">
    <div class="max-w-fit mb-6"> <%# 戻るボタン設置 %>
    <%= render 'shared/back_button' %>
    </div>

    <div class="mb-1 text-xl font-bold">パレット作成 </div>

    <div class="px-2  bg-white shadow sm:rounded-lg flex flex-col lg:flex-row  items-center justify-center"> <%# フォームの大枠span・右半分と左半分で分けてるところ %>
      <div class="flex flex-col p-6"> <%# 左側欄 %>
        <div class="flex justify-between items-end">
          <div class="text-xl font-bold">プレビュー</div> <%# プレビュー見出し %>
          <div x-data="{modalIsOpen: false}" class="mr-3"> <%# パレットを削除する %>
            <button x-on:click="modalIsOpen = true" type="button" class="flex items-center">
              <p class="text-xs text-center text-orange-400 hover:text-orange-600 border-b border-orange-400">パレットを削除する</p>
            </button>
            <div x-cloak x-show="modalIsOpen" x-transition.opacity.duration.200ms x-trap.inert.noscroll="modalIsOpen" x-on:keydown.esc.window="modalIsOpen = false" x-on:click.self="modalIsOpen = false" class="fixed inset-0 z-30 flex items-end justify-center bg-black/20 p-4 pb-8 backdrop-blur-md sm:items-center lg:p-8" role="dialog" aria-modal="true" aria-labelledby="defaultModalTitle">
                <!-- Modal Dialog -->
                <div x-show="modalIsOpen" x-transition:enter="transition ease-out duration-200 delay-100 motion-reduce:transition-opacity" x-transition:enter-start="opacity-0 scale-50" x-transition:enter-end="opacity-100 scale-100" class="flex max-w-lg flex-col gap-4 overflow-hidden rounded-sm border border-neutral-300 bg-white text-neutral-600 dark:border-neutral-700 dark:bg-neutral-900 dark:text-neutral-300">
                    <!-- Dialog Header -->
                    <div class="flex items-center justify-between border-b border-neutral-300 bg-neutral-50/60 p-4 dark:border-neutral-700 dark:bg-neutral-950/20">
                        <h3 id="defaultModalTitle" class="font-semibold tracking-wide text-neutral-900 dark:text-white">パレット削除</h3>
                        <button x-on:click="modalIsOpen = false" aria-label="close modal">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" stroke="currentColor" fill="none" stroke-width="1.4" class="w-5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
                            </svg>
                        </button>
                    </div>
                    <!-- Dialog Body -->
                    <div class="px-4 py-8">
                        <p>開発予定。準備中です。</p>
                    </div>
                    <!-- Dialog Footer -->
                </div>
            </div>
          </div>
        </div>
        <div class="w-[24rem] h-56 lg:w-[28rem] lg:h-72 mt-3 flex justify-center items-center overflow-hidden text-white shadow-xl rounded-xl bg-blue-gray-500 bg-clip-border border-2">
          <div class="w-80 h-48 lg:w-96 lg:h-56 flex overflow-hidden text-white shadow-xl rounded-md bg-blue-gray-500 bg-clip-border shadow-blue-gray-500/40">
            <div class="w-[60%] h-full bg-[#fcf7b0]"></div>
            <div class="w-[5%] h-full bg-[#e8380d]"></div>
            <div class="w-[45%] h-full bg-[#004c83]"></div>
          </div>
        </div>
      </div>

      <div class="p-6 flex flex-col"> <%# フォーム本体枠 %>
        <div class="mx-auto max-w-xs">
          <div class="mt-3"> <%# タイトル %>
            <p class="font-bold">タイトル</p>
            <div class="flex gap-1 items-center justify-center">
              <input placeholder="non-title" class="w-80 px-4 py-2 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white">
              </input>
            </div>
          </div>

          <div class="mt-3"> <%# 概要欄(任意) %>
            <p class="font-bold">概要欄(任意)</p>
            <div class="flex gap-1 items-center justify-center">
              <textarea disabled rows="3" placeholder="※本リリースにて開発予定です。" class="w-80 px-4 py-2 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white"></textarea>
            </div>
          </div>

          <div class="mt-3"> <%# タグ(任意) %>
            <p class="font-bold">タグ</p>
            <div class="flex gap-1 items-center justify-center">
              <input disabled placeholder="※本リリースにて開発予定です。" class="w-80 px-4 py-2 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white"/>
            </div>
          </div>

          <div class="mt-5 flex gap-2 justify-end">
            <button type="button" class="py-2.5 px-5 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">下書き保存</button> <%# https://flowbite.com/docs/components/buttons/ %>
            <button type="button" class="focus:outline-none text-white bg-orange-400 hover:bg-orange-500 font-medium rounded-lg text-sm px-5 py-2.5">公開する</button>
          </div>

        </div>
      </div>
    </div>


    <div class="flex flex-col lg:flex-row justify-center items-center gap-2 mt-10"> <%# 画面サイズ大のときは、「ベース・比率選択」を左に、「色選択」を右側に配置したい。 %>
      <div class="flex flex-col gap-5"> <%# 左側部分。「ベース・比率選択」は縦に並べたい。 %>
        <%= render "shared/edit_palette/palette_base" %> <%# ベース選択テンプレ %>
        <%#= render "shared/edit_palette/color_ratio" %> <%# 配色比率テンプレ %>
      </div>
      <%= render "shared/edit_palette/color_selector" %> <%# 色選択テンプレ %>
    </div>
  </div>
</div>

<script>
// 選択ボタンが押された時に色選択画面にベースの色を反映させるための関数。
// Alpine.jsで呼び出すにはhtmlのscript内で書かないといけない？？
function baseToSelector(basedNum){
  window.currentBaseNum = basedNum; // 他の処理でも選択中のベース番号を扱うための上書き処理。
  document.getElementById('selected-base').style.background = window.colors[basedNum - 1];
  document.getElementById('selected-mini-base').style.background = window.colors[basedNum - 1];
  document.getElementById('selected-color').textContent = window.colors[basedNum - 1];
}

// 削除ボタンが押された時のパレット再整列処理
function deleteColors(baseNum){
  window.colors.splice(baseNum - 1, 1);
  for (let i = 1; i <= window.colors.length; i++){
    resetLists = document.getElementsByClassName(`reset-base-${i}`);
    resetLists[0].style.fill = window.colors[i - 1];
    resetLists[1].style.background = window.colors[i - 1];
    resetLists[2].textContent = window.colors[i - 1];
  }
}

// 追加ボタンが押された時のパレット再生列処理。
function addColors(){
  // 候補色セットのループ処理抜け出し用変数。
  let setSituation = false;
  while( !setSituation ) { // setSituationがfalseの間は繰り返す。
    // 追加候補のdefaultAddColorsから先頭の値を一つ取り出す。
    const candidateColor = window.defaultAddColors.shift();
    if (!window.colors.includes(candidateColor)){ // colorsにcandidateColorが含まれてない時だけ処理実行。
      // 色を配列に一つ追加する。
      window.colors.push(candidateColor);
      setSituation = true;
    }
    // colorsに追加できたら、候補として取り出してた色をdefaultAddColorsの最後に戻す。
    window.defaultAddColors.push(candidateColor);
  }
  // 配列の要素数を取得する。
  const addIndex = window.colors.length;
  // 配列の最後の値をベースの最後に反映させる。
  resetLists = document.getElementsByClassName(`reset-base-${addIndex}`); //3色目が追加されたなら、それをreset-base-3に格納する。
    resetLists[0].style.fill = window.colors[addIndex - 1];
    resetLists[1].style.background = window.colors[addIndex - 1];
    resetLists[2].textContent = window.colors[addIndex - 1];
}

// スライダーを最新に変更する関数。(色が変更される処理のときに実行する。)
function recreateSlider(){
  console.log('recreateSliderが呼び出されました')
  // 現在のスライダーを削除
  window.slider.noUiSlider.destroy();
  console.log('スライドを削除しました。再作成に移ります');
  // 新しいスライダーを作成
  createSlider();
  console.log('スライドの再作成に成功しました');
  // つまみ間に色をつけたい。
  connect = slider.querySelectorAll('.noUi-connect');
  for (var i = 0; i < connect.length; i++) {
      connect[i].style.background = window.colors[i]; // backgroundのスタイルを直接指定する。
  }
  console.log('色付けに成功しました');
}

</script>